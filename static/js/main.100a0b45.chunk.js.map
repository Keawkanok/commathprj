{"version":3,"sources":["logo.svg","views/main.js","views/page1.js","views/page2.js","views/page3.js","views/page4.js","views/page5.js","views/page6.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","main","href","page1","page2","page3","page4","page5","page6","routes","path","element","App","routing","useRoutes","routers","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uHAAAA,EAAOC,QAAU,IAA0B,kC,kHCE5B,SAASC,IACpB,OACI,6BACI,wCACA,6BACI,4BACI,4BAAI,uBAAGC,KAAK,UAAR,qCACJ,4BAAI,uBAAGA,KAAK,UAAR,qCACJ,4BAAI,uBAAGA,KAAK,UAAR,qCACJ,4BAAI,uBAAGA,KAAK,UAAR,qCACJ,4BAAI,uBAAGA,KAAK,UAAR,qCACJ,4BAAI,uBAAGA,KAAK,UAAR,wCCXT,SAASC,IACpB,OACI,6BACI,4CCHG,SAASC,IACpB,OACI,6BACI,4CCHG,SAASC,IACpB,OACI,6BACI,4CCHG,SAASC,IACpB,OACI,6BACI,4CCHG,SAASC,IACpB,OACI,6BACI,4CCHG,SAASC,IACpB,OACI,6BACI,4CCKZ,IAeeC,EAfA,CACX,CAAEC,KAAM,IAAKC,QAAS,kBAAC,EAAD,OACtB,CAAED,KAAM,aAAcC,QAAS,kBAAC,EAAD,OAC/B,CAAED,KAAM,QAASC,QAAS,kBAAC,EAAD,OAC1B,CAAED,KAAM,QAASC,QAAS,kBAAC,EAAD,OAC1B,CAAED,KAAM,QAASC,QAAS,kBAAC,EAAD,OAC1B,CAAED,KAAM,QAASC,QAAS,kBAAC,EAAD,OAC1B,CAAED,KAAM,QAASC,QAAS,kBAAC,EAAD,OAC1B,CAAED,KAAM,QAASC,QAAS,kBAAC,EAAD,Q,OCPfC,EALH,WACV,IAAMC,EAAUC,YAAUC,GAC1B,OAAO,6BAAMF,ICIKG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,iBCVNC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.100a0b45.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'\r\n\r\nexport default function main() {\r\n    return (\r\n        <div>\r\n            <h1>Com Math</h1>\r\n            <div>\r\n                <ul>\r\n                    <li><a href=\"/page1\">บทที่ 1</a></li>\r\n                    <li><a href=\"/page2\">บทที่ 2</a></li>\r\n                    <li><a href=\"/page3\">บทที่ 3</a></li>\r\n                    <li><a href=\"/page4\">บทที่ 4</a></li>\r\n                    <li><a href=\"/page5\">บทที่ 5</a></li>\r\n                    <li><a href=\"/page6\">บทที่ 6</a></li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function page1() {\r\n    return (\r\n        <div>\r\n            <h1>Hello World</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function page2() {\r\n    return (\r\n        <div>\r\n            <h1>Hello World</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function page3() {\r\n    return (\r\n        <div>\r\n            <h1>Hello World</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function page4() {\r\n    return (\r\n        <div>\r\n            <h1>Hello World</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function page5() {\r\n    return (\r\n        <div>\r\n            <h1>Hello World</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function page6() {\r\n    return (\r\n        <div>\r\n            <h1>Hello World</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport Main from './views/main';\r\nimport Page1 from './views/page1';\r\nimport Page2 from './views/page2';\r\nimport Page3 from './views/page3';\r\nimport Page4 from './views/page4';\r\nimport Page5 from './views/page5';\r\nimport Page6 from './views/page6';\r\n\r\n\r\nconst routes = [\r\n    { path: \"/\", element: <Main />, },\r\n    { path: \"commathprj\", element: <Main />, },\r\n    { path: \"page1\", element: <Page1 />, },\r\n    { path: \"page2\", element: <Page2 />, },\r\n    { path: \"page3\", element: <Page3 />, },\r\n    { path: \"page4\", element: <Page4 />, },\r\n    { path: \"page5\", element: <Page5 />, },\r\n    { path: \"page6\", element: <Page6 />, },\r\n\r\n\r\n   \r\n\r\n  ];\r\n  \r\nexport default routes;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport routers from \"./routes\";\nimport { useRoutes } from \"react-router-dom\";\n\nconst App = () => {\n  const routing = useRoutes(routers);\n  return <div>{routing}</div>;\n \n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}